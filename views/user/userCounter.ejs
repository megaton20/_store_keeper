<%- include ('../partials/topbarUser') %>

<div class="p-4">
  <%- include ('../partials/messages') %>
  <div class="row">
    <!-- cat Card-->
    <div class="col-2">
      <div class="card border-2 rounded-4 mb-2">
        <div class="card-header text-dark">Categories</div>
        <div class="card-body">
          <% allCategory.forEach(data => { %>
          <button data-category="<%= data.Category_name %>" class="categoryButton tile card shadow border-1 bg-light text-dark p-4 h-100" style="width: 100%;">
            <%= data.Category_name %>
          </button>
          <% }); %>
        </div>
      </div>
    </div>
    <!-- items Card-->
    <div class="col-6">
      <section>
        <div class="card border-2 rounded-4 mb-3">
          <div class="card-header">
            <div class="row">
              <div class="col-md-6" id="itemHeading">Items</div>
              <div class="search-bar col-md-6">
                <input id="searchInput" style="padding: 2px; padding-left: 5px;" type="text" placeholder="search items" class="form-control bg-transparent text-dark" />
              </div>
            </div>
          </div>
          <div class="card-body" style="height: 700px; overflow-y: scroll;">
            <div class="mb-2 row" id="itemsContainer"></div>
          </div>
        </div>
      </section>
    </div>

    <!-- cart Card-->
    <div class="col-4">
      <div class="card text-dark border-2 shadow rounded-4 mb-4">
        <div class="card-header">Total: <span id="Total" class="text-success">0</span> To be paid</div>
        <div class="card-body p-4">
          <div class="mb-2">
            <!-- to display cart items -->
            <div id="cart"></div>
          </div>
          <br />
          <form id="cart-form" action="/user/cart" method="post">
            <!-- Form for submitting the cart -->
            <div class="row">
              <div class="col-6">
                <select id="payment-method" class="form-control text-dark">
                  <option value="cash">cash</option>
                  <option value="Debit card">Debit card</option>
                  <option value="Split payment">Split payment</option>
                </select>
              </div>
              <div class="col-6">
                <select id="delivery-method" class="form-control text-dark">
                  <option value="Pickup">Pickup</option>
                  <option value="delivery">delivery</option>
                </select>
              </div>
            </div>
            <button class="btn btn-success mt-3" type="submit" id="submit-cart" style="width: 100%">submit</button>
          </form>
          <div class="img mt-3 mb-4">
            <img style="width: 100%" src="/assets/payments.png" alt="" />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="my-footer" style="position: fixed; bottom: 0; width: 100%;">
  <%- include('../partials/footer') %>
</div>
<%- include ('../partials/logout') %>

<script>
  // Array to store items in the cart
  let cart = [];
  let priceArray = [];
  let submitPrice;

  var totalDiv = document.getElementById('Total');

  // Calculating the price in the current array
  function populateCurrentPrice() {
    var totalPrice = priceArray.reduce((total, item) => total + parseInt(item.price), 0);
    totalDiv.innerHTML = totalPrice.toLocaleString('en-US');
    submitPrice = totalPrice;
    return;
  }

  // Function to add item to cart
  function addToCart(itemId) {
    cart.push(itemId);
    displayCart();
  }

  // Function to remove item from cart
  function removeFromCart(itemId) {
    uuidToRemove = itemId.uuid;
    var indexToRemove = cart.findIndex(purgeItem => purgeItem.uuid === uuidToRemove);

    if (indexToRemove !== -1) {
      cart.splice(indexToRemove, 1);
    }

    removePrice(itemId);
    displayCart();
  }

  function handleBbuttonClick(event) {
    let selectedButton = document.querySelectorAll(".add-to-cart");
    var id = event.getAttribute("data-id");
    var name = event.getAttribute("data-name");
    var price = event.getAttribute("data-price");

    let obj = { id: id, name: name, price: price };

    var uuid = Date.now() + Math.floor(Math.random() * 1000);
    obj.uuid = uuid;

    addToCart(obj);
    addPrice(obj);
  }

  function addPrice(cartObj) {
    priceArray.push(cartObj);
    populateCurrentPrice();
  }

  function removePrice(itemId) {
    uuidToRemove = itemId.uuid;
    var indexToRemove = priceArray.findIndex(purgeItem => purgeItem.uuid === uuidToRemove);

    if (indexToRemove !== -1) {
      priceArray.splice(indexToRemove, 1);
    }
  }

  function displayCart() {
    const cartDiv = document.getElementById('cart');
    cartDiv.innerHTML = '';
    cart.forEach((itemId, index) => {
      const itemName = ` ${itemId.name}`;
      const itemPrice = ` ${itemId.price}`;
      const itemDiv = document.createElement('div');
      itemDiv.classList.add("mb-4", "row", "border-bottom", 'pb-1');
      const itmeContent = document.createElement('div');
      itmeContent.classList.add("col-6");
      itmeContent.textContent = `${itemName} `;
      const selectedPrice = document.createElement('div');
      selectedPrice.classList.add("col-4");
      selectedPrice.textContent = `${itemPrice} `;
      const removeButton = document.createElement('button');
      removeButton.textContent = 'X';
      removeButton.classList.add("btn", "btn-danger", "col-1");
      removeButton.addEventListener('click', () => {
        removeFromCart(itemId);
        removePrice(itemId);
        populateCurrentPrice();
      });
      cartDiv.appendChild(itemDiv);
      itemDiv.appendChild(itmeContent);
      itemDiv.appendChild(selectedPrice);
      itemDiv.appendChild(removeButton);
    });
  }

  function submitCart(e) {
    const paymentInput = document.getElementById('payment-method').value;
    const deliveryInput = document.getElementById('delivery-method').value;

    let customerName = {
      sumTotal: submitPrice,
      paymentType: paymentInput,
      deliveryInput: deliveryInput
    };

    const paymentMethodInput = document.getElementById('payment-method');
    const myform = document.getElementById('cart-form');

    const metaDataInput = document.createElement('input');
    metaDataInput.setAttribute('type', "hidden");
    metaDataInput.setAttribute('name', 'meta');
    metaDataInput.setAttribute('value', JSON.stringify(customerName));

    const cartInput = document.createElement('input');
    cartInput.setAttribute('type', 'hidden');
    cartInput.setAttribute('name', 'cart');
    cartInput.setAttribute('value', JSON.stringify(cart));

    document.getElementById('cart-form').appendChild(cartInput);
    document.getElementById('cart-form').appendChild(metaDataInput);

    const form = document.getElementById('cart-form');
  }

  let form = document.getElementById('submit-cart');
  form.addEventListener('click', submitCart);

  const itemHeading = document.getElementById('itemHeading');
  const searchInput = document.getElementById('searchInput');
  const categoryButtons = document.querySelectorAll('.categoryButton');

  categoryButtons.forEach(button => {
    button.addEventListener('click', function () {
      const category = this.getAttribute('data-category');
      fetchItems(category, '');
    });
  });

  searchInput.addEventListener('input', function () {
    const searchTerm = this.value;
    const activeCategoryButton = document.querySelector('.categoryButton.active');
    const category = activeCategoryButton ? activeCategoryButton.getAttribute('data-category') : '';

    fetchItems("", searchTerm);
  });

  function fetchItems(category, searchTerm) {
    fetch(`/getItems/${category} ?search=${searchTerm}`)
      .then(response => response.json())
      .then(items => {
        populateItems(items);
      })
      .catch(error => {
        console.error('Error fetching items:', error);
      });
  }

  function populateItems(items) {
    const itemsContainer = document.getElementById('itemsContainer');
    itemsContainer.innerHTML = '';
    if (items.length === 0) {
      itemsContainer.innerHTML = '<p class="p-4 text-dark "> No items found for this category at the moment (-:)</p>';
      itemHeading.classList.remove("text-dark");
      itemHeading.classList.add("text-danger");
      itemHeading.innerHTML = `Shelf is empty`;
    } else {
      itemHeading.classList.remove("text-danger");
      itemHeading.classList.add("text-warning");
      itemHeading.innerHTML = `All items on our shelf`;
      items.forEach(item => {
        const itemElement = document.createElement('div');
        itemElement.innerHTML = `
          <button class="add-to-cart tile card shadow border-0 text-dark text-center mb-4 mr-2" data-id="${item.id}" data-name="${item.ProductName}" data-price='${item.UnitPrice}' onclick="handleBbuttonClick(this)">
            <a>
              <img style="max-width: 120px; max-height: 120px;" src="/images/default.JPG" class="card-img-top rounded-4" alt="...">
              <div class="text-center">
                <p class="card-text">${item.ProductName}</p>
                <p class="card-text"><small>$ ${item.UnitPrice}</small></p>
              </div>
            </a>
          </button>
        `;
        itemsContainer.appendChild(itemElement);
      });
    }
  }

</script>
