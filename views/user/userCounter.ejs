



  <%- include('./partials/navbar') %>

  <main class="main">
    

        
      <!-- Clients Section -->
      <section id="clientsg" class="clients section">
        <div class="container" data-aos="fade-up">
          <div class="row">
  
            <div class="col-xl-2 col-md-3 col-6 client-logo">
              <img src="design/img//clients/client-1.png" class="img-fluid" alt="">
            </div><!-- End Client Item -->
  
            <div class="col-xl-2 col-md-3 col-6 client-logo">
              <img src="design/img//clients/client-2.png" class="img-fluid" alt="">
            </div><!-- End Client Item -->
  
            <div class="col-xl-2 col-md-3 col-6 client-logo">
              <img src="design/img//clients/client-3.png" class="img-fluid" alt="">
            </div><!-- End Client Item -->
  
            <div class="col-xl-2 col-md-3 col-6 client-logo">
              <img src="design/img//clients/client-4.png" class="img-fluid" alt="">
            </div><!-- End Client Item -->
  
            <div class="col-xl-2 col-md-3 col-6 client-logo">
              <img src="design/img//clients/client-5.png" class="img-fluid" alt="">
            </div><!-- End Client Item -->
  
            <div class="col-xl-2 col-md-3 col-6 client-logo">
              <img src="design/img//clients/OrangeGroup.logo.svg" class="img-fluid" alt="">
            </div><!-- End Client Item -->

  
          </div>
  
        </div>
  
      </section><!-- /Clients Section -->

      <div class="container"><%- include('../partials/messages') %></div>

    <!-- Page Title -->
    <div class="page-title" data-aos="fade">
      <div class="container d-lg-flex justify-content-between align-items-center">
        <nav class="breadcrumbs">
          <ol>
            <!-- <li><div class=""><input id="searchInput" type="text" placeholder="Search in category" class="form-control text-dark" ></div></li> -->
          </ol>
        </nav>
      </div>
    </div><!-- End Page Title -->
    <!-- Service Details Section -->
    <section id="service-details" class="service-details section">

      
      
      <div class="container">

        <div class="row">

          <div class="col-lg-4 fixed-col" data-aos="fade-up" data-aos-delay="100" >

            <div class="service-box ">
              <h4>Category List</h4>
              <div class="services-list">
                <% allCategory.forEach(data => { %>
                <a class=" categoryButton" data-category="<%= data.Category_name %>">
                  <i class="bi bi-arrow-right-circle"></i><span> <%= data.Category_name %></span>
                </a>
               
                <% }); %>
              </div>
            </div><!-- End Services List -->

          </div>
          <div class="col-lg-8 ps-lg-5  scrolling-col row" id="itemsContainer">

            <% showcaseItem.forEach(data => { %>
              <div class=" col-md-4 col-lg-3 col-xl-3" >
                  <div class="mt-4 card shadow border-1 text-dark text-center">
                      <div class="item-image-container ">
                        <img src="/uploads/<%= data.image %>" class=" card-img-top rounded-4" alt="<%= data.image %>">
                      </div>
                      <div class="item-text p-2">
                        <p><%= data.ProductName%></p>
                        <p ><small>â‚¦<%= data.UnitPrice %>.00</small></p>
                      </div> 
                       <div class="mt-3">
                        <button style="width:100%" class="my-btn add-to-cart" data-id="<%= data.id %>" data-name="<%= data.ProductName %>" data-price="<%= data.UnitPrice %>" data-max="<%= data.total_on_shelf %>" data-image="<%= data.image %>" onclick="handleButtonClick(this)">Add to Cart</button>
                      </div> 
                    </div>
                  </div>
                  <% }); %>
            </div>


                     
            <div class="help-box d-flex flex-column justify-content-center align-items-center">
              <i class="bi bi-headset help-icon"></i>
              <h4>Have a Question?</h4>
              <p class="d-flex align-items-center mt-2 mb-0"><i class="bi bi-telephone me-2"></i> <span>+234 9160209475</span></p>
              <p class="d-flex align-items-center mt-1 mb-0"><i class="bi bi-envelope me-2"></i> <a href="mailto:contact@example.com">adarikumichael@gmail.com</a></p>
            </div> 

      </div>

    </section><!-- /Service Details Section -->

  </main>

  <br>
  <br>
  <br>
  <br>
  <%- include('../partials/openFooter') %>

  <!-- Scroll Top -->
  <a href="#" id="scroll-top" class="scroll-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

  <!-- Preloader -->
  <div id="preloader"></div>

  <!-- Vendor JS Files -->






  <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
<script>
  let cart = [];
  console.log(cart);
  const presentCart = <%- JSON.stringify(presentCart) %>;
  
  // initailize cart on log in
  function initializeCart(presentCart) {
    presentCart.forEach(item => {
      cart.push({
        id: item.product_id,
        name: item.product_name,
        price: item.price_per_item,
        max: item.max,
        image: item.image,
        quantity: item.quantity
      });
      updateItemButton(item.product_id, item.product_name, item.total_on_shelf, item.unit_price, item.image);
    });
    updateCartBadge();
  }

    // Initialize cart with data from the server-side template
  initializeCart(presentCart);


  function updateCartBadge() {
    const cartBadges = document.querySelectorAll('#cart-badge');
    cartBadges.forEach(cartBadge => {
      cartBadge.textContent = cart.length;
    });
  }
  

  function updateItemQuantityNumber(item) {
    const itemButtonGroup = document.querySelector(`.btn-group[data-id='${item.id}']`);
    if (itemButtonGroup) {
      const quantityButton = itemButtonGroup.querySelector('.btn-secondary');
      if (quantityButton) {
        quantityButton.textContent = item.quantity;
      }
    }
  }
  

  function updateItemButton(itemId, itemName, itemMax, itemPrice, itemImage) {
    const itemButton = document.querySelector(`.add-to-cart[data-id='${itemId}']`);
    const cartItem = cart.find(cartItem => cartItem.id === itemId);
  
    if (cartItem) {
      if (itemButton) {
        itemButton.outerHTML = `
          <div style="width:95%"  class="m-2 btn-group" role="group" data-id="${itemId}">
            <button class="btn btn-danger" onclick="removeFromCart(${itemId})">-</button>
            <button class="btn btn-secondary" disabled>${cartItem.quantity}</button>
            <button class="btn btn-success" onclick="increaseQuantity(${itemId})">+</button>
          </div>
        `;
      }
    } else {
      const parentDiv = document.querySelector(`.btn-group[data-id='${itemId}']`);
      if (parentDiv) {
        parentDiv.outerHTML = `
          <button style="width:95%" class="my-btn add-to-cart" data-id="${itemId}" data-name="${itemName}" data-price="${itemPrice}" data-max="${itemMax}" data-image="${itemImage}" onclick="handleButtonClick(this)">Add to Cart</button>
        `;
      }
    }
  }
  
  function addToCart(item) {
    let existingItem = cart.find(cartItem => cartItem.id === item.id);
  
    if (existingItem) {
      if (existingItem.quantity < item.max) {
        existingItem.quantity++;
      } else {
        alert(`You can only add up to ${item.max} of this item.`);
        return;
      }
    } else {
      item.quantity = 1;
      cart.push(item);
    }
  
    updateItemQuantityNumber(item);
    updateCartBadge();
    updateItemButton(item.id, item.name, item.max, item.price, item.image);
  
    // Send POST request to server to update cart in database
    $.ajax({
      type: 'POST',
      url: '/updateCart',
      data: JSON.stringify({ cart: cart }),
      contentType: 'application/json',
      success: function(response) {
        console.log('Cart updated successfully:', response);
      },
      error: function(error) {
        console.error('Error updating cart:', error);
      }
    });
  }
  
  function increaseQuantity(itemId) {
    let item = cart.find(cartItem => cartItem.id === itemId);
    if (item && item.quantity < item.max) {
      console.log(item);
      item.quantity++;
      updateItemQuantityNumber(item);
      updateCartBadge();
      updateItemButton(item.id, item.name, item.max, item.price, item.image);
  
      // Update cart in the database
      $.ajax({
        type: 'POST',
        url: '/updateCart',
        data: JSON.stringify({ cart: cart }),
        contentType: 'application/json',
        success: function(response) {
        },
        error: function(error) {
          console.error('Error updating cart:', error);
        }
      });
    } else if (item) {
      alert(`You can only add up to ${item.max} of this item.`);
    }
  }
  
  function removeFromCart(itemId) {
    let item = cart.find(cartItem => cartItem.id === itemId);
    if (item) {
      item.quantity--;
      if (item.quantity === 0) {
        cart = cart.filter(cartItem => cartItem.id !== itemId);
      }
      updateItemQuantityNumber(item);
      updateCartBadge();
      updateItemButton(item.id, item.name, item.max, item.price, item.image);
  
      // Update cart in the database
      $.ajax({
        type: 'POST',
        url: '/updateCart',
        data: JSON.stringify({ cart: cart }),
        contentType: 'application/json',
        success: function(response) {
          console.log('Cart updated successfully:', response);
        },
        error: function(error) {
          console.error('Error updating cart:', error);
        }
      });
    }
  }
  
  function handleButtonClick(event) {
    const id = parseInt(event.getAttribute("data-id"), 10);
    const name = event.getAttribute("data-name");
    const image = event.getAttribute("data-image");
    const price = parseFloat(event.getAttribute("data-price"));
    const max = parseInt(event.getAttribute("data-max"), 10);
  
    const item = { id, name, price, max, image };
    addToCart(item);
  }


function fetchItems(category, searchTerm) {
      // Check if loader container element exists, if not, create it
      let loaderContainer = document.getElementById('loader-container');
      if (!loaderContainer) {
        loaderContainer = document.createElement('div');
        loaderContainer.id = 'loader-container';
        loaderContainer.style.display = 'flex';
        loaderContainer.style.justifyContent = 'center';
        loaderContainer.style.alignItems = 'center';
        loaderContainer.style.margin = 'auto';
        loaderContainer.style.marginBottom = '300px';
        loaderContainer.style.position = 'fixed';
        loaderContainer.style.top = '0';
        loaderContainer.style.left = '0';
        loaderContainer.style.width = '100%';
        loaderContainer.style.height = '100%';
        loaderContainer.style.zIndex = '1000';

        const loaderImg = document.createElement('img');
        loaderImg.src = '/images/loader.gif';
        loaderImg.alt = 'Loading...';
        loaderContainer.appendChild(loaderImg);
        document.body.appendChild(loaderContainer);
      }

      // Show loader
      loaderContainer.style.display = 'flex';

      $.ajax({
        url: `/getItems/${category}?search=${searchTerm}`,
        method: 'GET',
        dataType: 'json',
        success: function(items) {
          populateItems(items);

          // Hide loader
          loaderContainer.style.display = 'none';
        },
        error: function(error) {
          console.error('Error fetching items:', error);
          // Hide loader even on error
          loaderContainer.style.display = 'none';
          // loaderContainer.style.display = 'flex';
        }
      });
    }

 
  
  function populateItems(items) {
    const itemsContainer = document.getElementById('itemsContainer');
    itemsContainer.innerHTML = '';
    if (items.length === 0) {
      // const bgimge = document.getElementsByClassName('item-background-image').classList.remove('item-background-image')
      itemsContainer.innerHTML = `
        <div class="no-items " style="display: flex; justify-content: center; align-items: center; margin: auto; margin-bottom: 50px;">
          <img style="max-width: 50%; max-height: 50%;" src="/images/no data.jpeg" class=" rounded-4" alt="images">
        </div>`;
    } else {


      items.forEach(item => {
        const itemElement = document.createElement('div');
        itemElement.classList.add('col-6', 'mt-4', 'col-md-4', 'col-lg-3');
        itemElement.innerHTML = `
          <div class="card shadow border-1 text-dark text-center">
            <div class="item-image-container">
              <img src="/uploads/${item.image}" class=" card-img-top rounded-4" alt="${item.image}">
              </div>
            <div class="item-text p-2">
              <p>${item.ProductName}</p>
              <p ><small>â‚¦${item.UnitPrice}.00</small></p>
            </div>
            <div class="mt-3">
              <button style="width:100%" class="my-btn add-to-cart" data-id="${item.id}" data-name="${item.ProductName}" data-price="${item.UnitPrice}" data-max="${item.total_on_shelf}" data-image="${item.image}" onclick="handleButtonClick(this)">Add to Cart</button>
            </div>
          </div>
        `;
        itemsContainer.appendChild(itemElement);
        updateItemButton(item.id, item.ProductName, item.total_on_shelf, item.UnitPrice, item.image); // Ensure the button is updated if the item is already in the cart
      });
    }
  }
  
  document.querySelectorAll('.categoryButton').forEach(button => {
    button.addEventListener('click', function () {
      // console.log("hi");
      document.querySelectorAll('.categoryButton').forEach(btn => btn.classList.remove('active'));
      this.classList.add('active');
      const category = this.getAttribute('data-category');
      fetchItems(category, '');
    });
  });
  
  document.getElementById('searchInput').addEventListener('input', function () {
    const searchTerm = this.value;
    const activeCategoryButton = document.querySelector('.categoryButton.active');
    const category = activeCategoryButton ? activeCategoryButton.getAttribute('data-category') : '';
    fetchItems(category, searchTerm);
  });
  
  // Initial load
  
  

  
  fetchItems('', '');
  </script> 
  


